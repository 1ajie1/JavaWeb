{"version":3,"file":"static/js/795.7e51553f.chunk.js","mappings":"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","sources":["pages/Demo3.tsx","pages/Demo3Delete.tsx","pages/Demo3Insert.tsx","pages/Demo3Update.tsx"],"sourcesContent":["import { Button, Space, Table } from \"antd\";\r\nimport { ColumnsType } from \"antd/lib/table\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Course, CourseQueryForm, R } from \"./Course\";\r\nimport { Demo3Delete } from \"./Demo3Delete\";\r\nimport { Demo3Insert } from \"./Demo3Insert\";\r\nimport { Demo3Update } from \"./Demo3Update\";\r\nimport RouteStore from \"../store/RouteStore\";\r\nimport { Navigate, useNavigate } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\nexport default function Demo3() {\r\n  const [courses, setCourse] = useState<Course[]>([]);\r\n  const [form, setForm] = useState<CourseQueryForm>({});\r\n  const [insertOpen, setInserOpen] = useState(false);\r\n  const [updateOpen, setUpdateOpen] = useState(false);\r\n  const [loading, setLoading] = useState(true);\r\n  const [picture, setPicture] = useState(\"\");\r\n  const [updateForm, setUpdateForm] = useState<Course>({\r\n    id: 0,\r\n    name: \"\",\r\n    hours: 0,\r\n    college: \"\",\r\n  });\r\n\r\n  //函数\r\n  function onUpdateClick(course: Course) {\r\n    setUpdateOpen(true);\r\n    setUpdateForm(course);\r\n  }\r\n  function onUpdateSuccess() {\r\n    setUpdateOpen(false);\r\n    setForm((old) => {\r\n      return { ...old };\r\n    });\r\n  }\r\n  function onUpdateCancel() {\r\n    setUpdateOpen(false);\r\n  }\r\n\r\n  function onInsertClick() {\r\n    setInserOpen(true);\r\n  }\r\n\r\n  function onInsertSuccess() {\r\n    setInserOpen(false);\r\n    setForm((old) => {\r\n      return { ...old };\r\n    });\r\n  }\r\n\r\n  function onInsertCancel() {\r\n    setInserOpen(false);\r\n  }\r\n  function onDeleteSuccess() {\r\n    setForm((old) => {\r\n      return { ...old };\r\n    });\r\n  }\r\n\r\n  const nav = useNavigate()\r\n  function onClick(){\r\n    RouteStore.reset()\r\n    nav('/login')\r\n  }\r\n\r\n  \r\n  \r\n  useEffect(() => {\r\n    async function getCourse() {\r\n      const resp = await axios.get<Course[]>(`http://localhost:8080/select`);\r\n      setCourse(resp.data);\r\n      setLoading(false);\r\n    }\r\n\r\n    getCourse();\r\n  }, [form]);\r\n\r\n  if(RouteStore.username === ''){\r\n    return <Navigate to={'/login'}/>\r\n  }\r\n\r\n  const columns: ColumnsType<Course> = [\r\n    {\r\n      title: \"序号\",\r\n      dataIndex: \"id\",\r\n    },\r\n    {\r\n      title: \"封面\",\r\n      dataIndex: \"picture\",\r\n      width: \"100px\",\r\n      render: (record) => {\r\n        // const pic = \"http://localhost:8080/getpicture/\"+record;\r\n        // console.log(pic)\r\n        // setPicture(pic);\r\n        return (\r\n          <>\r\n            <img\r\n              id=\"picture\"\r\n              src={\"http://localhost:8080/getpicture/\" + record}\r\n              width={\"50px\"}\r\n              height={\"50px\"}\r\n            ></img>\r\n          </>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      title: \"课程名\",\r\n      dataIndex: \"name\",\r\n    },\r\n    {\r\n      title: \"课时数\",\r\n      dataIndex: \"hours\",\r\n    },\r\n    {\r\n      title: \"学院\",\r\n      dataIndex: \"college\",\r\n    },\r\n    {\r\n      title: \"操作\",\r\n      dataIndex: \"operation\",\r\n      render: (_, course) => {\r\n        return (\r\n          <>\r\n            <Space>\r\n              <Button\r\n                type=\"default\"\r\n                size=\"small\"\r\n                onClick={() => {\r\n                  onUpdateClick(course);\r\n                }}\r\n              >\r\n                编辑\r\n              </Button>\r\n              <Demo3Delete\r\n                id={course.id}\r\n                onSuccess={onDeleteSuccess}\r\n              ></Demo3Delete>\r\n            </Space>\r\n          </>\r\n        );\r\n      },\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"div0\">\r\n        <Demo3Update\r\n          open={updateOpen}\r\n          course={updateForm}\r\n          onSuccess={onUpdateSuccess}\r\n          onCancel={onUpdateCancel}\r\n        ></Demo3Update>\r\n        <Demo3Insert\r\n          open={insertOpen}\r\n          course={{ id: 1, name: \"\", hours: 0, college: \"\" }}\r\n          onSuccess={onInsertSuccess}\r\n          onCancel={onInsertCancel}\r\n        ></Demo3Insert>\r\n      </div>\r\n      <div className=\"div1\">\r\n        <Button type=\"primary\" onClick={onInsertClick}>\r\n          新增\r\n        </Button>\r\n        <Button  type=\"primary\" danger onClick={onClick}>注销</Button>\r\n      </div>\r\n      <div className=\"div2\">\r\n        <span>\r\n          <h2>欢迎您，[{RouteStore.username}]</h2>\r\n        </span>\r\n      </div>\r\n      <Table\r\n        columns={columns}\r\n        dataSource={courses}\r\n        rowKey={\"id\"}\r\n        loading={loading}\r\n      ></Table>\r\n      ;\r\n    </div>\r\n  );\r\n}\r\n","import { Button, message, Popconfirm } from \"antd\";\r\nimport axios from \"axios\";\r\n\r\nexport function Demo3Delete({ id ,onSuccess}: { id: number,onSuccess:()=>void }) {\r\n  async function onConfirm() {\r\n    //删除函数\r\n    try {\r\n      const resp = await axios.delete<string>(`http://localhost:8080/delete/${id}`);\r\n      message.success(\"删除成功\");\r\n      onSuccess && onSuccess()\r\n    } catch (error) {\r\n      console.log(error);\r\n      message.error(\"删除错误\");\r\n    }\r\n  }\r\n  return (\r\n    <Popconfirm title=\"确定要删除吗？\" onConfirm={onConfirm}>\r\n      <Button danger size=\"small\">\r\n        删除\r\n      </Button>\r\n    </Popconfirm>\r\n  );\r\n}\r\n","import { Button, Form, Input, InputNumber, message, Modal, Upload } from \"antd\";\r\nimport { useEffect } from \"react\";\r\nimport { Course } from \"./Course\";\r\nimport axios from \"axios\";\r\n\r\nexport function Demo3Insert({\r\n  open,\r\n  course,\r\n  onSuccess,\r\n  onCancel,\r\n}: {\r\n  open: boolean,\r\n  course: Course,\r\n  onSuccess?:()=> void,\r\n  onCancel?:()=> void\r\n}) {\r\n  const [form] = Form.useForm();\r\n  async function onOk() {\r\n    try {\r\n      const values = await form.validateFields();\r\n      //修改数据库\r\n      const resp = await axios.post(`http://localhost:8080/insert`,values,{headers:{ 'Content-Type': 'multipart/form-data'}})\r\n      message.success(\"修改成功\");\r\n      onSuccess && onSuccess();\r\n    } catch (e) {\r\n      console.log(e)\r\n      message.error(\"错误\");\r\n    }\r\n  }\r\n  useEffect(() => {\r\n    form.setFieldsValue(course);\r\n  }, [course]);\r\n  return (\r\n    <Modal open={open} title=\"新增学生\" onOk={onOk} onCancel={onCancel}>\r\n      <Form form={form} >\r\n        <Form.Item label=\"课程名\" name={\"name\"}>\r\n          <Input></Input>\r\n        </Form.Item>\r\n        <Form.Item label=\"课时\" name={\"hours\"}>\r\n          <InputNumber></InputNumber>\r\n        </Form.Item>\r\n        <Form.Item label=\"学院\" name={'college'}>\r\n          <Input></Input>\r\n        </Form.Item>\r\n        <Form.Item\r\n          label=\"封面图片\"   \r\n          name=\"file\"\r\n        >\r\n          <Upload\r\n            name=\"image\"\r\n            beforeUpload={() => {\r\n              return false;\r\n            }}\r\n            withCredentials={true}\r\n            listType=\"picture\"\r\n          >\r\n            <Button >上传</Button>\r\n          </Upload>\r\n        </Form.Item> \r\n      </Form>\r\n    </Modal>\r\n  );\r\n}\r\n","import { Button, Form, Input, InputNumber, Upload, message } from \"antd\";\r\nimport Modal from \"antd/lib/modal/Modal\";\r\nimport axios from \"axios\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { Course } from \"./Course\";\r\n\r\nexport function Demo3Update(\r\n  this: any,\r\n  {\r\n    open,\r\n    course,\r\n    onSuccess,\r\n    onCancel,\r\n  }: {\r\n    open?: boolean;\r\n    course?: Course;\r\n    onSuccess?: () => void;\r\n    onCancel?: () => void;\r\n  }\r\n) {\r\n  const [form] = Form.useForm();\r\n  // const [fileList, setFileList] = useState<any[]>([]);\r\n\r\n  // function handleChange(e: { target: { files: any } }) {\r\n  //   const newFileList = [...e.target.files];\r\n  //   setFileList(newFileList);\r\n  //   console.log(\"input\");\r\n  // }\r\n\r\n  // const formdata = new FormData();\r\n  // function handleUpload() {\r\n  //   formdata.append(\"file\", fileList[0]);\r\n  //   console.log(formdata.getAll(\"file\"));\r\n  // }\r\n\r\n  async function onOk() {\r\n    try {\r\n      var values = await form.validateFields();\r\n      //修改数据库\r\n      // values = qs.stringify(values);\r\n      const resp = await axios.post(`http://localhost:8080/update`,values,{headers:{ 'Content-Type': 'multipart/form-data'}});\r\n\r\n      message.success(\"修改成功\");\r\n      onSuccess && onSuccess();\r\n    } catch (e) {\r\n      console.log(e);\r\n      message.error(\"错误\");\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    form.setFieldsValue(course);\r\n  }, [course]);\r\n  return (\r\n    <Modal open={open} title=\"编辑学生\" onOk={onOk} onCancel={onCancel}>\r\n      <Form form={form} >\r\n        <Form.Item name={\"id\"} hidden={true}></Form.Item>\r\n        <Form.Item label=\"课程名\" name={\"name\"}>\r\n          <Input></Input>\r\n        </Form.Item>\r\n        <Form.Item label=\"课时\" name={\"hours\"}>\r\n          <InputNumber></InputNumber>\r\n        </Form.Item>\r\n        <Form.Item label=\"学院\" name={\"college\"}>\r\n          <Input></Input>\r\n        </Form.Item>\r\n        <Form.Item\r\n          label=\"封面图片\"   \r\n          name=\"file\"\r\n        >\r\n          <Upload\r\n            name=\"image\"\r\n            beforeUpload={() => {\r\n              return false;\r\n            }}\r\n            withCredentials={true}\r\n            listType=\"picture\"\r\n          >\r\n            <Button >上传</Button>\r\n          </Upload>\r\n        </Form.Item>   \r\n      </Form>\r\n    </Modal>\r\n  );\r\n}\r\n"],"names":["Demo3","_useState","useState","_useState2","_slicedToArray","courses","setCourse","_useState3","_useState4","form","setForm","_useState5","_useState6","insertOpen","setInserOpen","_useState7","_useState8","updateOpen","setUpdateOpen","_useState9","_useState10","loading","setLoading","_useState11","_useState12","_useState13","id","name","hours","college","_useState14","updateForm","setUpdateForm","onDeleteSuccess","old","_objectSpread","nav","useNavigate","useEffect","_getCourse","_asyncToGenerator","_regeneratorRuntime","mark","_callee","resp","wrap","_context","prev","next","axios","sent","data","stop","apply","arguments","getCourse","RouteStore","_jsx","Navigate","to","columns","title","dataIndex","width","render","record","_Fragment","children","src","height","_","course","_jsxs","Space","Button","type","size","onClick","onUpdateClick","Demo3Delete","onSuccess","className","Demo3Update","open","onCancel","Demo3Insert","danger","Table","dataSource","rowKey","_ref","_onConfirm","concat","message","t0","console","log","Popconfirm","onConfirm","_Form$useForm","Form","_onOk","values","validateFields","headers","setFieldsValue","Modal","onOk","label","Input","InputNumber","Upload","beforeUpload","withCredentials","listType","hidden"],"sourceRoot":""}